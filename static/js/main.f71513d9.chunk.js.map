{"version":3,"sources":["gameHelpers.js","img/bg.png","components/styles/styledtetris.js","tetrominos.js","hooks/useStage.js","components/styles/styledstage.js","components/styles/styledcell.js","components/cell.js","components/stage.js","components/styles/styleddisplay.js","components/display.js","components/styles/styledstartbutton.js","components/startbutton.js","components/tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","React","memo","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","console","log","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f71513d9.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () => \n    Array.from(Array(STAGE_HEIGHT), () =>\n        new Array(STAGE_WIDTH).fill([0, 'clear'])\n    )\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n    for(let y = 0; y < player.tetromino.length; y += 1){\n        for(let x = 0; x <player.tetromino[y].length ; x += 1){\n\n            //1. Check that we're on an actual Tetromino Cell\n            if(player.tetromino[y][x] !== 0){\n                if(\n                //2. Check that our move is inside the game areas height (y)\n                //we shouldn't go through the bottom of the play area\n                !stage[y + player.pos.y + moveY] || \n                //3. Check that our move is inside the game areas width (x)\n                !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n                //4. Check that the cell we're moving to isn't set to clear\n                    stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n                ){\n                    return true;\n                }\n            }\n\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from 'styled-components';\n\nimport bgImage from '../../img/bg.png';\n\nexport const StyledTetrisWrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background: url(${bgImage}) #000;\n    background-size: cover;\n    overflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n    display: flex;\n    align-items: flex-start;\n    padding: 40px;\n    margin: 0 auto;\n    max-width: 900px;\n\n    aside { \n        width: 100%;\n        max-width: 200px;\n        display: block;\n        padding: 0 20px;\n    }\n`","export const TETROMINOS = {\n    0: { shape: [[0]], color: '0, 0, 0'},\n    I: {\n        shape: [\n                 [0, 'I', 0, 0],\n                 [0, 'I', 0, 0],\n                 [0, 'I', 0, 0],\n                 [0, 'I', 0, 0]\n               ],\n        color: '80, 227, 230',\n    },\n    J: {\n        shape: [\n                 [0, 'J', 0],\n                 [0, 'J', 0],\n                 ['J', 'J', 0]\n               ],\n        color: '36, 95, 223',\n    },\n    L: {\n        shape: [\n                 [0, 'L', 0],\n                 [0, 'L', 0],\n                 [0, 'L', 'L']\n               ],\n        color: '223, 173, 36',\n    },\n    O: {\n        shape: [\n                 ['O', 'O'],\n                 ['O', 'O']\n               ],\n        color: '223, 217, 36',\n    },\n    S: {\n        shape: [\n                 [0, 'S', 'S'],\n                 ['S', 'S', 0],\n                 [0, 0, 0]\n               ],\n        color: '48, 211, 56',\n    },\n    T: {\n        shape: [\n                 [0, 0, 0],\n                 ['T', 'T', 'T'],\n                 [0, 'T', 0]\n               ],\n        color: '132, 61, 198',\n    },\n    Z: {\n        shape: [\n                 ['Z', 'Z', 0],\n                 [0, 'Z', 'Z'],\n                 [0, 0, 0]\n               ],\n        color: '227, 78, 78',\n    }\n};\n\nexport const randomTetromino = () => {\n    const tetrominos = 'IJLOSTZ';\n    const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\n\n    return TETROMINOS[randTetromino];\n}","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\nimport { usePlayer } from './usePlayer';\n\nexport const useStage = (player, resetPlayer) => {\n    const[stage, setStage] = useState(createStage());\n    const[rowsCleared, setRowsCleared] = useState(0);\n\n    useEffect(() => {\n        setRowsCleared(0);\n\n        const sweepRows = newStage => \n            newStage.reduce((ack, row) => {\n                if(row.findIndex(cell => cell[0] === 0) === -1){\n                    setRowsCleared(prev => prev + 1);\n                    ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n                    return ack;\n                }\n                ack.push(row);\n                return ack;\n            }, [])\n\n        const updateStage = prevStage => {\n            // First flush the stage\n            const newStage = prevStage.map(row => \n                row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n            );\n\n            //Then draw the tetromino\n            player.tetromino.forEach((row, y) => {\n                row.forEach((value, x) => {\n                    if(value !== 0) {\n                        newStage[y + player.pos.y][x + player.pos.x] = [\n                            value,\n                            `${player.collided ? 'merged' : 'clear'}`,\n                        ]\n                    }\n                });\n            });\n            // Then check if we collided\n            if(player.collided){\n                resetPlayer();\n                return sweepRows(newStage);\n            }\n\n            return newStage;\n        };\n\n        setStage(prev => updateStage(prev));\n    }, [player, resetPlayer]);\n\n    return [stage, setStage, rowsCleared];\n}","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n    display: grid;\n    grid-template-rows: repeat(\n        ${props => props.height},\n        calc(25vw / ${props => props.width})\n    );\n    grid-template-columns: repeat(${props => props.width}, 1fr);\n    grid-gap: 1px;\n    border: 2px solid #333;\n    width: 100%;\n    max-width: 25vw;\n    background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n    width: auto;\n    background: rgba(${props => props.color}, 0.8);\n    border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n    border-bottom-color: rgba(${props => props.color}, 0.1);\n    border-right-color: rgba(${props => props.color}, 1);\n    border-top-color: rgba(${props => props.color}, 1);\n    border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from 'react';\nimport { StyledCell } from './styles/styledcell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({ type }) => (\n    <StyledCell type = {type} color={TETROMINOS[type].color}>\n    </StyledCell>\n)\n\nexport default React.memo(Cell);","import React from 'react';\nimport { StyledStage } from './styles/styledstage';\nimport Cell from './cell';\n\nconst Stage = ({ stage }) => (\n    <StyledStage width={stage[0].length} height={stage.length}>\n        {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n);\n\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    border: 4px solid #333;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    color: ${props => (props.gameOver ? 'red' : '#999')};\n    background: #000;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 0.8rem;\n`","import React from 'react';\nimport { StyledDisplay } from './styles/styleddisplay';\n\nconst Display = ({ gameOver, text }) => (\n    <StyledDisplay gameOver = {gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n    box-sizing: border-box;\n    margin: 0 0 20px 0;\n    padding: 20px;\n    min-height: 30px;\n    width: 100%;\n    border-radius: 20px;\n    border: none;\n    color: white;\n    background: #333;\n    font-family: Pixel, Arial, Helvetica, sans-serif;\n    font-size: 1rem;\n    outline: none;\n    cursor: pointer;\n`","import React from 'react';\nimport { StyledStartButton } from './styles/styledstartbutton';\n\nconst StartButton = ({ callback }) => (\n    <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\n\nexport default StartButton;","import React, { useState } from 'react';\n\nimport { createStage, checkCollision } from '../gameHelpers';\n\n//Styled Components\nimport { StyledTetrisWrapper, StyledTetris} from './styles/styledtetris';\n\n//Custom Hooks\nimport { useInterval } from '../hooks/useInterval';\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n// Components\nimport Stage from './stage';\nimport Display from './display';\nimport StartButton from './startbutton';\n\nconst Tetris = () => {\n    const [dropTime, setDropTime] = useState(null);\n    const [gameOver, setGameOver] = useState(false);\n\n    const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n    const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n    const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n    console.log('re-render');\n\n    const movePlayer = dir => {\n        if(!checkCollision(player, stage, { x: dir, y: 0})){\n            updatePlayerPos({ x: dir, y: 0 });\n        }\n    }\n\n    const startGame = () => {\n        console.log(\"test\")\n       //Reset everything\n        setStage(createStage());\n        setDropTime(1000);\n        resetPlayer();\n        setGameOver(false);\n        setScore(0);\n        setRows(0);\n        setLevel(0);\n    }\n\n    const drop = () => {\n        // Increase level when player has cleared 10 rows\n        if(rows > (level + 1) * 10){\n            setLevel(prev => prev + 1);\n            // Also increase speed\n            setDropTime(1000 / (level + 1) + 200);\n        }\n        if(!checkCollision(player, stage, {x: 0, y: 1 })){\n            updatePlayerPos({ x: 0, y:1, collided: false })\n        } else {\n            //Game Over\n            if(player.pos.y < 1){\n                console.log(\"GAME OVER!!!\");\n                setGameOver(true);\n                setDropTime(null);\n            }\n            updatePlayerPos({ x: 0, y:0, collided: true });\n        }\n    }\n\n    const keyUp = ({ keyCode }) => {\n        if(!gameOver){\n            if(keyCode === 40) {\n                console.log('interval on');\n                setDropTime(1000 / (level + 1) + 200);\n            }\n        }\n    }\n\n    const dropPlayer = () => {\n        console.log('interval off');\n        setDropTime(null);\n        drop();\n    }\n\n    const move = ({ keyCode }) => {\n        if(!gameOver){\n            if(keyCode === 37){\n                movePlayer(-1);\n            }else if(keyCode === 39){\n                movePlayer(1);\n            }else if(keyCode === 40){\n                dropPlayer();\n            }else if(keyCode === 38){\n                playerRotate(stage, 1);\n            }\n        }\n    }\n\n    useInterval(() => {\n        drop();\n    }, dropTime)\n\n    return (\n        <StyledTetrisWrapper role=\"button\" tabIndex=\"0\" onKeyDown = {e => move(e)} onKeyUp = {keyUp}>\n            <StyledTetris>\n                <Stage stage={ stage }/>\n                <aside>\n                    {gameOver ? (\n                        <Display gameOver={gameOver} text=\"Game Over\"/>\n                    ): (\n                        <div>\n                            <Display text={`Score: ${score}`} />\n                            <Display text={`Rows: ${rows}`} />\n                            <Display text={`Level: ${level}`} />\n                        </div>\n                    )}\n                    <StartButton callback={startGame}/>\n                </aside>\n            </StyledTetris>\n        </StyledTetrisWrapper>\n    );\n};\n\nexport default Tetris;","import { useState, useCallback } from 'react';\nimport { checkCollision, STAGE_WIDTH } from '../gameHelpers';\n\nimport { TETROMINOS, randomTetromino } from'../tetrominos';\n\nexport const usePlayer = () => {\n    const [player, setPlayer] = useState({\n        pos: { x:0, y:0 },\n        tetromino: TETROMINOS[0].shape,\n        collided: false,\n    });\n\n    const rotate = (matrix, dir) => {\n        // Make the rows to become cols (transpose)\n        const rotatedTetro = matrix.map((_, index) => matrix.map(col => col[index]),\n        );\n\n        // Reverse each row to get a rotated matrix\n        if(dir > 0) return rotatedTetro.map(row => row.reverse());\n        return rotatedTetro.reverse();\n    };\n\n    const playerRotate = (stage, dir) => {\n        const clonedPlayer = JSON.parse(JSON.stringify(player));\n        clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n        const pos = clonedPlayer.pos.x;\n        let offset = 1;\n        while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })){\n            clonedPlayer.pos.x += offset;\n            offset = -(offset + (offset > 0 ? 1 : -1));\n            if(offset > clonedPlayer.tetromino[0].length){\n                rotate(clonedPlayer.tetromino, -dir);\n                clonedPlayer.pos.x = pos;\n                return;\n            }\n        }\n\n        setPlayer(clonedPlayer);\n    }\n\n    const updatePlayerPos = ({x, y, collided}) => {\n        setPlayer(prev => ({\n            ...prev,\n            pos: {x : (prev.pos.x += x), y: (prev.pos.y += y)},\n            collided,\n        }))\n    }\n\n    const resetPlayer = useCallback(() => {\n        setPlayer({\n            pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n            tetromino: randomTetromino().shape,\n            collided: false,\n        })\n    }, [])\n\n    return [player, updatePlayerPos, resetPlayer, playerRotate];\n}","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n    const [score, setScore] = useState(0);\n    const [rows, setRows] = useState(0);\n    const [level, setLevel] = useState(0);\n\n    const linePoints = [40, 100, 300, 1200];\n\n    const calcScore = useCallback(() => {\n        // We have score\n        if(rowsCleared > 0) {\n            // This is how original Tetris score is calculated\n            setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n            setRows(prev => prev + rowsCleared);\n        }\n    }, [level, linePoints, rowsCleared]);\n\n    useEffect(() => {\n        calcScore();\n    }, [calcScore, rowsCleared, score]);\n\n    return [score, setScore, rows, setScore, level, setLevel];\n}","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/tetris';\n\nconst App = () => (\n  <div className = 'App'>\n    <Tetris />\n  </div>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}